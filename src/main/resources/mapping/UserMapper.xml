<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.example.demo.entity.User">
		<id column="id" property="ID" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="date" property="date" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="image" property="image" jdbcType="VARCHAR" />
		<result column="basicCourse1Grade" property="basicCourse1Grade" jdbcType="INTEGER" />
		<result column="basicCourse2Grade" property="basicCourse2Grade" jdbcType="INTEGER" />
		<result column="professionalCourse1Grade" property="professionalCourse1Grade" jdbcType="INTEGER" />
		<result column="professionalCourse2Grade" property="professionalCourse2Grade" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id, account, password, email, phone, birthday,nickname,
		sex,date, status, image,basicCourse1Grade,basicCourse2Grade,
		professionalCourse1Grade,professionalCourse2Grade
	</sql>

	<insert id="addUser" parameterType="com.example.demo.entity.User">
		insert into user (account,
		password,
		email, phone, birthday,
		nickname, sex,date, status, image)
		values (#{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{nickname,jdbcType=VARCHAR},
		#{sex,jdbcType=TIMESTAMP},
		#{date,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER},
		#{image,jdbcType=VARCHAR})
	</insert>


	<select id="selectByID" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{ID,jdbcType=INTEGER}
	</select>

	<select id="selectByAccount" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where account = #{account,jdbcType=VARCHAR}
	</select>

	<update id="updateByID" parameterType="com.example.demo.entity.User">
		update user
		set
		password=#{password,jdbcType=VARCHAR},
		email=#{email,jdbcType=VARCHAR}, phone=#{phone,jdbcType=VARCHAR},
		birthday=#{birthday,jdbcType=TIMESTAMP},
		nickname=#{nickname,jdbcType=VARCHAR}, sex=#{sex,jdbcType=TIMESTAMP},
		image=#{image,jdbcType=VARCHAR},status=#{status,jdbcType=INTEGER},
		basicCourse1Grade=#{basicCourse1Grade,jdbcType=INTEGER},basicCourse2Grade=#{basicCourse2Grade,jdbcType=INTEGER},
		professionalCourse1Grade=#{professionalCourse1Grade,jdbcType=INTEGER},professionalCourse2Grade=#{professionalCourse2Grade, jdbcType=INTEGER}
		where id = #{ID,jdbcType=INTEGER}
	</update>
	
	<select id="search" resultMap="BaseResultMap">
		select
		*
		from user
		where
		account like
		#{keyword,jdbcType=VARCHAR} or id like #{keyword,jdbcType=VARCHAR}
		or nickname like #{keyword,jdbcType=VARCHAR} </select>
	<select id="allUser" resultMap="BaseResultMap">
		select
		*
		from user
	</select>
	<select id="existAccount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		SELECT count(*) from user where account =
		#{account,jdbcType=VARCHAR}
	</select>
	
	<delete id="deleteByID" parameterType="java.lang.Integer">
		delete from user
		where id =
		#{ID,jdbcType=INTEGER}
	</delete>

	<select id="getUserCount" resultType="java.lang.Integer">
		select
		count(*)
		from user
	</select>


</mapper>